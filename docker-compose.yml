version: "3"

services:
  #####PROXY#####
  tina-traefik:
    image: traefik:1.7
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8082:8082

    labels:
      - "traefik.backend=proxy"
      - "traefik.frontend.rule=Host:proxy.${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"
      - "traefik.port=8081"
      - "traefik.enable=true"
      - "traefik.docker.domain=${D_HOST}"
      
    networks:
      - ai-web
      - ai-internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik-${HTTPMODE}.toml:/etc/traefik/traefik.toml
      - ./traefik/acme/:/etc/traefik/
  
  # tina-auth:
  #   build: ./tina-auth
  #   restart: always
  #   environment:
  #     - LDAP_DOMAIN=${DOMAIN}

  #   labels:
  #     - "traefik.backend=auth"
  #     - "traefik.docker.network=web"
  #     - "traefik.enable=true"
  #     - "traefik.port=3000"
  #     - "traefik.frontend.rule=Host:auth.${D_HOST}"
  #     - "traefik.frontend.entryPoints=http"

  #   networks:
  #     - ai-internal
  #     - ai-web
      
  
  
  #####CONTAINER MANAGEMENT#####
  tina-portainer:
    image: portainer/portainer:pr2336
    labels:
      - "traefik.backend=portainer"
      - "traefik.docker.network=ai-web"
      - "traefik.enable=true"
      - "traefik.port=9000"
      - "traefik.frontend.rule=Host:portainer.${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock

    networks:
      - ai-internal
      - ai-web

  tina-mongodb:
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example

    volumes:
      - mongo_db:/data/db
    logging:
      driver: "none"
    networks:
      - ai-internal
      - ai-web

  #####NODE SERVER WEBSOCKET#####
  tina-websocket:
    restart: always
    build: ./tina-websocket/
    environment:
      - REDIS_HOST=${REDIS_HOST}

    labels:
      - "traefik.backend=websocket"
      - "traefik.docker.network=ai-web"
      - "traefik.enable=true"
      - "traefik.port=3001"
      - "traefik.frontend.rule=Host:ws.${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"
    #test debug ws and traefik
    expose:
      - "3001"
    ports:
      - "3001:3001"
    depends_on:
      - tina-redis
    networks:
      - ai-internal
      - ai-web

  #####REDIS MESSAGE QUEUE#####
  tina-redis:
    restart: always
    image: redis:latest
    expose:
      - "6379"

    volumes:
      - redis_data:/data
    networks:
      - ai-internal

  #####REDIS ADMIN SERVER#####
  tina-mongo-express:
    image: mongo-express

    environment:
      - ME_CONFIG_MONGODB_SERVER=${MONGODB_SERVER}
      - ME_CONFIG_OPTIONS_EDITORTHEME=${ME_CONFIG_OPTIONS_EDITORTHEME}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
    restart: always
    labels:
      - "traefik.backend=mongo-express"
      - "traefik.docker.network=ai-web"
      - "traefik.enable=true"
      - "traefik.port=8081"
      - "traefik.frontend.rule=Host:mongo-express.${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"
    expose:
      - "8081"
    depends_on:
      - tina-mongodb
    networks:
      - ai-web
      - ai-internal

  restheart:
    ### Change the tag below to run a different version of RESTHeart
    image: softinstigate/restheart
    ### Uncomment to name the container explicitly
    labels:
      - "traefik.backend=rest"
      - "traefik.docker.network=ai-web"
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:rest.${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"

    depends_on:
      - tina-mongodb
    networks:
      - ai-web
      - ai-internal
    volumes:
      - ./tina-restheart/restheart.yml:/opt/restheart/etc/restheart.yml:ro
      - ./tina-restheart/security.yml:/opt/restheart/etc/security.yml:ro

  #####REDIS ADMIN SERVER#####
  tina-redis-admin:
    image: faktiva/php-redis-admin

    environment:
      - PHPREDMIN_DATABASE_REDIS_0_HOST=${REDIS_HOST}

    labels:
      - "traefik.backend=pra"
      - "traefik.docker.network=ai-web"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:pra.${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"
    expose:
      - "80"

    depends_on:
      - tina-redis
    networks:
      - ai-web
      - ai-internal

  ### WORKERS
  training-worker:
    build: ./tina-worker
    restart: always
    volumes:
      - tina_data:/data/
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - WORKER=training
      - MONGODB_SERVER=${MONGODB_SERVER}
      - LOGLEVEL=${TRAIN_LOGLEVEL}
    links:
      - tina-redis
    networks:
      - ai-internal

  ### WORKERS
  upload-worker:
    build: ./tina-worker
    restart: always
    volumes:
      - tina_data:/data/
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - WORKER=upload
      - MONGODB_SERVER=${MONGODB_SERVER}
      - LOGLEVEL=${TRAIN_LOGLEVEL}
    links:
      - tina-redis
    networks:
      - ai-internal

  data-worker:
    build: ./tina-worker
    restart: always
    volumes:
      - tina_data:/data/
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - WORKER=datasetbuilder
      - MONGODB_SERVER=${MONGODB_SERVER}
      - LOGLEVEL=${DATA_LOGLEVEL}
    links:
      - tina-redis
    networks:
      - ai-internal

  prediction-worker:
    build: ./tina-worker
    restart: always
    volumes:
      - tina_data:/data/
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - WORKER=predict
      - MONGODB_SERVER=${MONGODB_SERVER}
      - LOGLEVEL=${PRED_LOGLEVEL}
    links:
      - tina-redis
    networks:
      - ai-internal
  testing-worker:
    build: ./tina-worker
    restart: always
    volumes:
      - tina_data:/data/
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - WORKER=testing
      - MONGODB_SERVER=${MONGODB_SERVER}
      - LOGLEVEL=${TEST_LOGLEVEL}
    links:
      - tina-redis
    networks:
      - ai-internal

  tina-api:
    build: ./tina-api
    restart: always
    volumes:
      - tina_data:/data/
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - MONGODB_SERVER=${MONGODB_SERVER}

    labels:
      - "traefik.backend=api"
      - "traefik.docker.network=ai-web"
      - "traefik.enable=true"
      - "traefik.port=5000"
      - "traefik.frontend.rule=Host:api.${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"
    links:
      - tina-redis
    networks:
      - ai-internal
      - ai-web

  tina-console:
    build: ./tina-console
    restart: always
    labels:
      - "traefik.backend=console"
      - "traefik.docker.network=ai-web"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"
    environment:
      - HTTPS=${HTTPS}
      - LOGINREQUIRED=${LOGINREQUIRED}
      - D_HOST=${D_HOST}
    expose:
      - 80
    networks:
      - ai-web

  tina-upload:
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - DESTINATION=/data
    build: ./tina-upload/
    restart: always
    labels:
      - "traefik.backend=upload"
      - "traefik.docker.network=ai-web"
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:upload.${D_HOST}"
      - "traefik.frontend.entryPoints=${ENTRYPOINTS}"
    expose:
      - "8080"
    volumes:
      - tina_data:/data/
    networks:
      - ai-web
      - ai-internal
    working_dir: /usr/src/app
    command: sh -c 'node ./src/index.js'


  ldap:
    build: ./ldap/
    
    privileged: true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./ldap/data/:/var/lib/samba
      - ./ldap/config/samba:/etc/samba/external
      - ./ldap/samba/config/openvpn/docker.ovpn:/docker.ovpn
      - ./ldap/samba/config/openvpn/credentials:/credentials
    environment:
      - DOMAIN=${DOMAIN}
      #- JOIN=true
      - DNSFORWARDER=192.168.1.1
      - NOCOMPLEXITY=true
      - INSECURELDAP=true 
      - DOMAINPASS=${DOMAINPASS}
    networks:
      - ai-web
      - ai-internal
  


volumes:
  portainer_data:
  tina_data:
  mongo_db:
  redis_data:

networks:
  ai-web:
    external: true
  ai-internal:
    external: false
